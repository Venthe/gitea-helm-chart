suite: config template
release:
  name: gitea-unittests
  namespace: testing
templates:
  - templates/gitea/config.yaml
tests:
  - it: inline config stringData.server using TPL
    set:
      global.giteaHostName: "gitea.example.com"
      ingress.enabled: true
      ingress.hosts[0].host: "{{ .Values.global.giteaHostName }}"
      ingress.tls:
        - secretName: gitea-tls
          hosts:
            - "{{ .Values.global.giteaHostName }}"
    asserts:
      - documentIndex: 0
        matchRegex:
          path: metadata.name
          pattern: .*-inline-config$
      - documentIndex: 0
        matchRegex:
          path: stringData.server
          pattern: DOMAIN=gitea\.example\.com
      - documentIndex: 0
        matchRegex:
          path: stringData.server
          pattern: ROOT_URL=https://gitea\.example\.com
      - documentIndex: 0
        matchRegex:
          path: stringData.server
          pattern: SSH_DOMAIN=gitea\.example\.com
  - it: PostgreSQL HA with hardcoded values using TPL
    set:
      postgresql-ha.enabled: true
      postgresql-ha.global.postgresql.database: "giteadb"
      postgresql-ha.global.postgresql.username: "giteausr"
      postgresql-ha.global.postgresql.password: "giteapsswd"
      postgresql-ha.service.ports.postgresql: 1234
      clusterDomain: test.local
    asserts:
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: NAME=giteadb
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: PASSWD=giteapsswd
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: USER=giteausr
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: HOST=gitea-unittests-postgresql-ha-pgpool.testing.svc.test.local:1234
  - it: PostgreSQL with hardcoded values using TPL
    set:
      postgresql-ha.enabled: false
      postgresql.enabled: true
      postgresql.global.postgresql.auth.database: "giteadb"
      postgresql.global.postgresql.auth.username: "giteausr"
      postgresql.global.postgresql.auth.password: "giteapsswd"
      postgresql.global.postgresql.service.ports.postgresql: 1234
      clusterDomain: test.local
    asserts:
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: NAME=giteadb
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: PASSWD=giteapsswd
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: USER=giteausr
      - documentIndex: 0
        matchRegex:
          path: stringData.database
          pattern: HOST=gitea-unittests-postgresql.testing.svc.test.local:1234