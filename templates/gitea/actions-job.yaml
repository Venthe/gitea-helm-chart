{{- if and (and .Values.actions.job.enabled .Values.persistence.enabled) .Values.persistence.mount }}
{{- if .Values.actions.existingSecret }}
{{- fail "Can't specify both actions.job.enabled and actions.existingSecret" }}
{{- end }}
{{- $name := include "gitea.workername" (dict "global" . "worker" "actions-token-job") }}
{{- $secretName := include "gitea.workername" (dict "global" . "worker" "actions-token") }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "gitea.fullname" . }}-scripts
  labels:
    {{- include "gitea.labels" . | nindent 4 }}
  annotations:
    # helm.sh/hook: post-install
    # helm.sh/hook-delete-policy: hook-succeeded
data:
{{ (.Files.Glob "scripts/*.sh").AsConfig | indent 2 }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $name }}
  labels:
    {{- include "gitea.labels" . | nindent 4 }}
    app.kubernetes.io/component: token-job
  annotations:
    # helm.sh/hook: post-install
    # helm.sh/hook-delete-policy: hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $name }}
  labels:
    {{- include "gitea.labels" . | nindent 4 }}
    app.kubernetes.io/component: token-job
  annotations:
    # helm.sh/hook: post-install
    # helm.sh/hook-delete-policy: hook-succeeded
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    resourceNames:
      - {{ $secretName }}
    verbs:
      - get
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $name }}
  labels:
    {{- include "gitea.labels" . | nindent 4 }}
    app.kubernetes.io/component: token-job
  annotations:
    # helm.sh/hook: post-install
    # helm.sh/hook-delete-policy: hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $name }}
subjects:
  - kind: ServiceAccount
    name: {{ $name }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name }}
  labels:
    {{- include "gitea.labels" . | nindent 4 }}
    app.kubernetes.io/component: token-job
  annotations:
    # helm.sh/hook: post-install
    # helm.sh/hook-delete-policy: hook-succeeded
  {{- with .Values.actions.job.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      labels:
        {{- include "gitea.labels" . | nindent 8 }}
        app.kubernetes.io/component: token-job
    spec:
      containers:
        - name: actions-token-create
          image: "{{ .Values.actions.job.tokenImage.repository }}:{{ .Values.actions.job.tokenImage.tag | default "latest-rootless" }}"
          imagePullPolicy: {{ .Values.actions.job.tokenImage.pullPolicy }}
          env:
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
          command:
            - sh
            - -c
            - |
              while ! nc -z gitea-http 3000; do
                sleep 5
              done

              echo "Generating token..."
              mkdir -p /data/actions/
              gitea actions generate-runner-token | grep -E '^.{40}$' | tr -d '\n' > /data/actions/token
          resources:
            {{- toYaml .Values.actions.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        - name: actions-token-upload
          image: "{{ .Values.actions.job.publishImage.repository }}:{{ .Values.actions.job.publishImage.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.actions.job.publishImage.pullPolicy }}
          env:
            - name: SECRET_NAME
              value: {{ $secretName }}
          command:
            - sh
            - -c
            - |
              printf "Checking rights to update secret... "
              kubectl auth can-i update secret/${SECRET_NAME}
              /scripts/token.sh
          resources:
            {{- toYaml .Values.actions.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /scripts
              name: scripts
              readOnly: true
            - mountPath: /data
              name: data
              readOnly: true
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
      restartPolicy: Never
      serviceAccount: {{ $name }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "gitea.fullname" . }}-scripts
            defaultMode: 0755
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.claimName }}
  parallelism: 1
  completions: 1
  backoffLimit: 1
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    # helm.sh/hook: post-install
    # helm.sh/hook-delete-policy: never
    argocd.argoproj.io/hook: Skip
    argocd.argoproj.io/hook-delete-policy: Never
  name: {{ $secretName }}
  labels:
    {{- include "gitea.labels" . | nindent 4 }}
    app.kubernetes.io/component: token-job
{{ $secret := (lookup "v1" "Secret" .Release.Namespace $secretName) -}}
{{ if $secret -}}
data:
  token: {{ (b64dec (index $secret.data "token")) | b64enc }}
{{ end -}}
{{- end }}
